buildscript {
    repositories {
        maven { url = "https://maven.minecraftforge.net/" }
        maven { url = "https://repo.spongepowered.org/maven" }
        mavenCentral()
    }
    dependencies {
        classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "5.+", changing: true
        classpath "org.spongepowered:mixingradle:0.7.+"
    }
}

apply plugin: "net.minecraftforge.gradle"
apply plugin: "org.spongepowered.mixin"

version = "${project.mc_version}-${project.mod_version}"
group = project.mod_group
archivesBaseName = project.archive_base_name

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = "1.8"
compileJava {
    options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
}

mixin {
    add sourceSets.main, project.mixin_refmap
}

minecraft {
    mappings channel: mappings_channel, version: mappings_version
    //makeObfSourceJar = false

    // accessTransformer = file("src/main/resources/META-INF/accesstransformer.cfg")

    runs {
        client {
            workingDirectory project.file("run")
            property "fml.coreMods.load", "${project.mod_group}.${project.loading_plugin}"
            property "tweakClass", project.mixin_tweaker
        }

        server {
            workingDirectory project.file("runServer")
            property "fml.coreMods.load", "${project.mod_group}.${project.loading_plugin}"
            property "tweakClass", project.mixin_tweaker
        }
    }
}

repositories {
    maven { url = "https://repo.spongepowered.org/maven" }
}

configurations {
    embed
    compileOnly.extendsFrom(embed)
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.mc_version}-${project.forge_version}"

    embed("org.spongepowered:mixin:0.8.3") {
        transitive = false
    }
    annotationProcessor "org.spongepowered:mixin:0.8.3:processor"
}

jar {
    manifest {
        attributes([
                "FMLCorePlugin"              : "${project.mod_group}.${project.loading_plugin}",
                "FMLCorePluginContainsFMLMod": true,
                "ForceLoadAsMod"             : true,
                "TweakClass"                 : project.mixin_tweaker,
                "TweakOrder"                 : "0",
                "MixinConfigs"               : project.mixin_config
        ])
    }
}

jar.finalizedBy("reobfJar")

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
